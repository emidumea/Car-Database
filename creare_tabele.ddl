-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2025-01-04 23:19:52 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE clienti (
    id_client NUMBER(5) NOT NULL,
    nume      VARCHAR2(50) NOT NULL,
    prenume   VARCHAR2(50) NOT NULL
)
LOGGING;

ALTER TABLE clienti ADD CONSTRAINT clienti_pk PRIMARY KEY ( id_client );

CREATE TABLE date_clienti (
    serie_ci   VARCHAR2(2) NOT NULL,
    nr_ci      NUMBER(6) NOT NULL,
    strada     VARCHAR2(50) NOT NULL,
    oras       VARCHAR2(50) NOT NULL,
    nr_telefon VARCHAR2(15) NOT NULL,
    email      VARCHAR2(100) NOT NULL,
    id_client  NUMBER(5) NOT NULL
)
LOGGING;

CREATE UNIQUE INDEX date_clienti__idx ON
    date_clienti (
        id_client
    ASC )
        LOGGING;

ALTER TABLE date_clienti ADD CONSTRAINT date_clienti_email_uk UNIQUE ( email );

CREATE TABLE date_tranzactii (
    pret             NUMBER(7) NOT NULL,
    modalitate_plata VARCHAR2(20) NOT NULL,
    tip_finantare    VARCHAR2(20),
    cod_vehicul      NUMBER(5) NOT NULL,
    id_tranzactie    NUMBER(7) NOT NULL
)
LOGGING;

ALTER TABLE date_tranzactii ADD CONSTRAINT date_tranzactii_pret_ck CHECK ( pret >= 0 );

CREATE UNIQUE INDEX date_tranzactii__idx ON
    date_tranzactii (
        id_tranzactie
    ASC )
        LOGGING;

CREATE UNIQUE INDEX date_tranzactii__idxv1 ON
    date_tranzactii (
        cod_vehicul
    ASC )
        LOGGING;

CREATE TABLE date_vehicule (
    an_fabricatie   NUMBER(4) NOT NULL,
    tip_combustibil VARCHAR2(20) NOT NULL,
    kilometraj      NUMBER(7) NOT NULL,
    cod_vehicul     NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE date_vehicule
    ADD CONSTRAINT date_veh_tip_comb_ck CHECK ( tip_combustibil IN ( 'Benzina', 'Electric', 'Hybrid', 'Motorina' ) );

ALTER TABLE date_vehicule ADD CONSTRAINT date_veh_km_ck CHECK ( kilometraj >= 0 );

CREATE UNIQUE INDEX date_vehicule__idx ON
    date_vehicule (
        cod_vehicul
    ASC )
        LOGGING;

CREATE TABLE dotari (
    id_dotare        NUMBER(3) NOT NULL,
    descriere_dotare VARCHAR2(100) NOT NULL
)
LOGGING;

ALTER TABLE dotari ADD CONSTRAINT dotari_pk PRIMARY KEY ( id_dotare );

CREATE TABLE test_drive (
    id_test_drive   NUMBER(7) NOT NULL,
    data_test_drive DATE NOT NULL,
    cod_vehicul     NUMBER(5) NOT NULL,
    id_client       NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE test_drive ADD CONSTRAINT test_drive_pk PRIMARY KEY ( id_test_drive );

CREATE TABLE tranzactii (
    id_tranzactie   NUMBER(7) NOT NULL,
    data_tranzactie DATE NOT NULL,
    id_client       NUMBER(5) NOT NULL
)
LOGGING;

ALTER TABLE tranzactii ADD CONSTRAINT tranzactii_de_vanzare_pk PRIMARY KEY ( id_tranzactie );

CREATE TABLE vehicul_dotari (
    cost_suplimentar NUMBER(4),
    cod_vehicul      NUMBER(5) NOT NULL,
    id_dotare        NUMBER(3) NOT NULL
)
LOGGING;

ALTER TABLE vehicul_dotari ADD CONSTRAINT veh_dotari_cost_supl_ck CHECK ( cost_suplimentar >= 0 );

CREATE TABLE vehicule (
    cod_vehicul NUMBER(5) NOT NULL,
    marca       VARCHAR2(50) NOT NULL,
    model       VARCHAR2(50) NOT NULL,
    pret        NUMBER(7) NOT NULL,
    stare       VARCHAR2(20) NOT NULL
)
LOGGING;

ALTER TABLE vehicule ADD CONSTRAINT vehicule_pret_ck CHECK ( pret >= 0 );

ALTER TABLE vehicule
    ADD CONSTRAINT vehicule_stare_ck CHECK ( stare IN ( 'nou', 'second-hand' ) );

ALTER TABLE vehicule ADD CONSTRAINT vehicule_cod_vehicul_pk PRIMARY KEY ( cod_vehicul );

ALTER TABLE date_clienti
    ADD CONSTRAINT clienti_date_clienti_fk FOREIGN KEY ( id_client )
        REFERENCES clienti ( id_client )
    NOT DEFERRABLE;

ALTER TABLE test_drive
    ADD CONSTRAINT clienti_test_drive_fk FOREIGN KEY ( id_client )
        REFERENCES clienti ( id_client )
    NOT DEFERRABLE;

ALTER TABLE tranzactii
    ADD CONSTRAINT clienti_tranzactii_fk FOREIGN KEY ( id_client )
        REFERENCES clienti ( id_client )
    NOT DEFERRABLE;

ALTER TABLE vehicul_dotari
    ADD CONSTRAINT dotari_vehicul_dotari_fk FOREIGN KEY ( id_dotare )
        REFERENCES dotari ( id_dotare )
    NOT DEFERRABLE;

ALTER TABLE date_tranzactii
    ADD CONSTRAINT tranzactii_date_tranzactii_fk FOREIGN KEY ( id_tranzactie )
        REFERENCES tranzactii ( id_tranzactie )
    NOT DEFERRABLE;

ALTER TABLE date_tranzactii
    ADD CONSTRAINT vehicule_date_tranzactii_fk FOREIGN KEY ( cod_vehicul )
        REFERENCES vehicule ( cod_vehicul )
    NOT DEFERRABLE;

ALTER TABLE date_vehicule
    ADD CONSTRAINT vehicule_date_vehicule_fk FOREIGN KEY ( cod_vehicul )
        REFERENCES vehicule ( cod_vehicul )
    NOT DEFERRABLE;

ALTER TABLE test_drive
    ADD CONSTRAINT vehicule_test_drive_fk FOREIGN KEY ( cod_vehicul )
        REFERENCES vehicule ( cod_vehicul )
    NOT DEFERRABLE;

ALTER TABLE vehicul_dotari
    ADD CONSTRAINT vehicule_vehicul_dotare_fk FOREIGN KEY ( cod_vehicul )
        REFERENCES vehicule ( cod_vehicul )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_test_drive_data 
    BEFORE INSERT OR UPDATE ON test_drive 
    FOR EACH ROW 
BEGIN
	IF( :new.data_test_drive < SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_test_drive, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER trg_tranzactii_data 
    BEFORE INSERT OR UPDATE ON tranzactii 
    FOR EACH ROW 
BEGIN
	IF( :new.data_tranzactie < SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_tranzactie, 'DD.MM.YYYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE SEQUENCE clienti_id_client_seq START WITH 101 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER clienti_id_client_trg BEFORE
    INSERT ON clienti
    FOR EACH ROW
    WHEN ( new.id_client IS NULL )
BEGIN
    :new.id_client := clienti_id_client_seq.nextval;
END;
/

CREATE SEQUENCE dotari_id_dotare_seq START WITH 501 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dotari_id_dotare_trg BEFORE
    INSERT ON dotari
    FOR EACH ROW
    WHEN ( new.id_dotare IS NULL )
BEGIN
    :new.id_dotare := dotari_id_dotare_seq.nextval;
END;
/

CREATE SEQUENCE test_drive_id_test_drive_seq START WITH 10001 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER test_drive_id_test_drive_trg BEFORE
    INSERT ON test_drive
    FOR EACH ROW
    WHEN ( new.id_test_drive IS NULL )
BEGIN
    :new.id_test_drive := test_drive_id_test_drive_seq.nextval;
END;
/

CREATE SEQUENCE tranzactii_id_tranzactie_seq START WITH 5001 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER tranzactii_id_tranzactie_trg BEFORE
    INSERT ON tranzactii
    FOR EACH ROW
    WHEN ( new.id_tranzactie IS NULL )
BEGIN
    :new.id_tranzactie := tranzactii_id_tranzactie_seq.nextval;
END;
/

CREATE SEQUENCE vehicule_cod_vehicul_seq START WITH 1001 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER vehicule_cod_vehicul_trg BEFORE
    INSERT ON vehicule
    FOR EACH ROW
    WHEN ( new.cod_vehicul IS NULL )
BEGIN
    :new.cod_vehicul := vehicule_cod_vehicul_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             9
-- CREATE INDEX                             4
-- ALTER TABLE                             21
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          5
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
